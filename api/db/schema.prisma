datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id               Int               @id @default(autoincrement())
  firstName        String
  lastName         String
  email            String
  accountStatus    String // enum AccountStatus { CONFIRM_EMAIL ACTIVE UNKNOWN}
  textEntries      TextEntry[]
  voiceEntries     VoiceEntry[]
  wordCloud        WordCloud[]
  commonNarratives CommonNarrative[]
  thoughtPatterns  ThoughtPattern[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  Pinned           Pinned[]
}

model TextEntry {
  id        Int      @id @default(autoincrement())
  title     String?
  entry     String
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VoiceEntry {
  id        Int      @id @default(autoincrement())
  title     String?
  entry     String
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WordCloud {
  id        Int      @id @default(autoincrement())
  title     String?
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  words     Word[]
}

model CommonNarrative {
  id        Int      @id @default(autoincrement())
  title     String?
  narrative String
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ThoughtPattern {
  id        Int      @id @default(autoincrement())
  title     String?
  pattern   String
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Word {
  id          Int       @id @default(autoincrement())
  word        String
  rating      Int
  wordCloudId Int
  wordClouds  WordCloud @relation(fields: [wordCloudId], references: [id])
}

model Pinned {
  id         Int      @id @default(autoincrement())
  title      String?
  pinnedItem String
  userId     Int
  User       User     @relation(fields: [userId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
